import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter1/Newsfield/Sports%20news.dart';
import 'package:flutter1/Newsfield/businesnews.dart';
import 'package:flutter1/Newsfield/news%20methods.dart';
import 'package:flutter1/Newsfield/newsModel.dart';
import 'package:http/http.dart';

class News extends StatefulWidget {
  const News({super.key});

  @override
  State<News> createState() => _NewsState();
}

class _NewsState extends State<News> {
  // Future<Autogenerated> getdata() async {
  //   var res = await get(Uri.parse(
  //       "https://newsapi.org/v2/everything?q=trending&apiKey=db7c5e060c1c49188fe23e493eee3257"));
  //   if (res.statusCode == 200) {
  //     var data = await Autogenerated.fromJson(jsonDecode(res.body));
  //     return data;
  //   } else {
  //     throw Exception("error");
  //   }
  // }
  TextEditingController _controller=TextEditingController();
  String val="";
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    getdata();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
          backgroundColor: Colors.black,
          title: TextField(controller: _controller,
              decoration: InputDecoration(border: InputBorder.none,

                  labelText: "SEARCH",
                  suffixIcon: IconButton(
                    onPressed: () {
                      setState(() {
                        val=_controller.text;
                      });
                      if(val=="Sports"||val=="sports"||val=="SPORTS"){
                         Navigator.push(context, MaterialPageRoute(builder: (_)=>Sportsnews()));
                      }
                      else if(val=="Business"||val=="business"||val=="BUSINESS"){
                        Navigator.push(context, MaterialPageRoute(builder: (_)=>Businews()));
                      }
                      else{
                         Text("TYPE CORRECT");
                      }
                    },
                    icon: Icon(Icons.search),
                  ))),
          bottom: Tab(
            child: Text(
              "TRENDING :",
              style: TextStyle(color: Colors.teal,fontSize: 20),
            ),
          )),
      backgroundColor: Colors.black,
      body: FutureBuilder(
          future: getdata(),
          builder: (context, AsyncSnapshot<Autogenerated> snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return Center(child: CircularProgressIndicator());
            } else if (snapshot.hasError) {
              return Center(child: Text("has error"));
            } else if (!snapshot.hasData) {
              return Center(child: Text("has no data"));
            } else if (snapshot.hasData) {
              List<Articles>? news = snapshot.data?.articles;
              return ListView.builder(
                  itemCount: news?.length,
                  itemBuilder: (context, int index) {
                    return Padding(
                      padding: const EdgeInsets.only(top: 10),
                      child: Card(
                        elevation: 10,
                        color: Colors.tealAccent,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              right: 10, top: 20, bottom: 20),
                          child: Row(
                            children: [
                              Expanded(
                                child: Text(
                                  "${news?[index].title}",
                                  style: TextStyle(
                                      fontSize: 18, color: Colors.black87),
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),
                              SizedBox(width: 70),
                              Container(
                                width: 90,
                                height: 120,
                                decoration: BoxDecoration(
                                    image: DecorationImage(
                                        image: NetworkImage(
                                            "${news?[index].urlToImage}"),
                                        fit: BoxFit.cover)),
                              )
                            ],
                          ),
                        ),
                      ),
                    );
                  });
            } else {
              return Center(child: Text("error"));
            }
          }),
    );
  }
}
